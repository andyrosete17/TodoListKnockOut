//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TDL.Front.TodoListService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/TDL.Services.Models")]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TodoListService.ITodoListService")]
    public interface ITodoListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/GetAllData", ReplyAction="http://tempuri.org/ITodoListService/GetAllDataResponse")]
        TDL.Front.TodoListService.Response GetAllData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/GetAllData", ReplyAction="http://tempuri.org/ITodoListService/GetAllDataResponse")]
        System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> GetAllDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/AddNewItem", ReplyAction="http://tempuri.org/ITodoListService/AddNewItemResponse")]
        TDL.Front.TodoListService.Response AddNewItem(string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/AddNewItem", ReplyAction="http://tempuri.org/ITodoListService/AddNewItemResponse")]
        System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> AddNewItemAsync(string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/RemoveData", ReplyAction="http://tempuri.org/ITodoListService/RemoveDataResponse")]
        TDL.Front.TodoListService.Response RemoveData(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/RemoveData", ReplyAction="http://tempuri.org/ITodoListService/RemoveDataResponse")]
        System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> RemoveDataAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/ChangeStatus", ReplyAction="http://tempuri.org/ITodoListService/ChangeStatusResponse")]
        TDL.Front.TodoListService.Response ChangeStatus(System.Guid id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoListService/ChangeStatus", ReplyAction="http://tempuri.org/ITodoListService/ChangeStatusResponse")]
        System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> ChangeStatusAsync(System.Guid id, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoListServiceChannel : TDL.Front.TodoListService.ITodoListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoListServiceClient : System.ServiceModel.ClientBase<TDL.Front.TodoListService.ITodoListService>, TDL.Front.TodoListService.ITodoListService {
        
        public TodoListServiceClient() {
        }
        
        public TodoListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TDL.Front.TodoListService.Response GetAllData() {
            return base.Channel.GetAllData();
        }
        
        public System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> GetAllDataAsync() {
            return base.Channel.GetAllDataAsync();
        }
        
        public TDL.Front.TodoListService.Response AddNewItem(string description) {
            return base.Channel.AddNewItem(description);
        }
        
        public System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> AddNewItemAsync(string description) {
            return base.Channel.AddNewItemAsync(description);
        }
        
        public TDL.Front.TodoListService.Response RemoveData(System.Guid id) {
            return base.Channel.RemoveData(id);
        }
        
        public System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> RemoveDataAsync(System.Guid id) {
            return base.Channel.RemoveDataAsync(id);
        }
        
        public TDL.Front.TodoListService.Response ChangeStatus(System.Guid id, string status) {
            return base.Channel.ChangeStatus(id, status);
        }
        
        public System.Threading.Tasks.Task<TDL.Front.TodoListService.Response> ChangeStatusAsync(System.Guid id, string status) {
            return base.Channel.ChangeStatusAsync(id, status);
        }
    }
}
